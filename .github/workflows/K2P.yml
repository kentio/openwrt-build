name: K2P

on:
  release:
    types: [published]

  push:
    branches:
      - master

  schedule:
    - cron: 5 6 1 * *

  #watch:
  #  types: [started]

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: 'k2p.config'
  TZ: Asia/Shanghai


jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /swapfile /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"

      - name: Clone source code
        run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

      - name: Update & Install feeds
        working-directory: ./openwrt
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Configuration Customization - Build K2P
        run: |
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
          chmod +x ./customize.sh && ./customize.sh
          cd openwrt && make defconfig

      - name: Download package
        working-directory: ./openwrt
        run: |
          make download -j$(nproc)
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: Build firmware
        working-directory: ./openwrt
        run: |
          echo -e "$(nproc) thread build."
          make -j$(nproc) V=s

      - name : Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt
          path: openwrt/bin
